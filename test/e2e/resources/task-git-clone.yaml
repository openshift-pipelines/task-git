# example ref: https://github.com/tektoncd/catalog/blob/main/stepaction/git-clone/0.1/samples/using-git-clone-result.yaml
---
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: git-clone-task
spec:
  description: |
    git-clone-task takes a git repository, tag name, and a commit SHA and
    checks whether the given tag resolves to that commit. This example
    Task demonstrates the following:
      - How to use the git-clone catalog StepAction
      - How to use the git-clone Step's "commit" Step Result from another Step.
      - How to discard the contents of the git repo when it isn't needed by
        passing an `emptyDir` Volume as its "output" workspace.
  params:
    - name: repo-url
      type: string
      description: The git repository URL to clone from.
    - name: tag-name
      type: string
      description: The git tag to clone.
    - name: expected-sha
      type: string
      description: The expected SHA to be received for the supplied revision.
  workspaces:
    - name: output
  steps:
    - name: fetch-repository
      ref:
        name: git-clone
      params:
        - name: URL
          value: $(params.repo-url)
        - name: REVISION
          value: $(params.tag-name)
        - name: OUTPUT_PATH
          value: $(workspaces.output.path)
    - name: validate-revision-sha
      image: registry.access.redhat.com/ubi8-minimal:latest
      env:
        - name: RESULT_COMMIT
          value: $(steps.fetch-repository.results.COMMIT)
      script: |
        #!/bin/bash
        echo $RESULT_COMMIT
        if [ "$(params.expected-sha)" != "${RESULT_COMMIT}" ]; then
          echo "Expected revision $(params.tag-name) to have SHA $(params.expected-sha)."
          exit 1
        else
          echo "Revision $(params.tag-name) has expected SHA $(params.expected-sha)."
        fi
