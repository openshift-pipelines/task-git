---
apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: {{ .Chart.Name }}
  labels:
    app.kubernetes.io/version: {{ .Chart.Version }}
{{- if .Values.annotations }}
  annotations:
  {{- .Values.annotations | toYaml | nindent 4 }}
{{- end }}
spec:
  description: |
    {{ .Chart.Description }}

  workspaces:
    - name: output
      description: |
        The git repo will be cloned onto the volume backing this Workspace.
    - name: ssh-directory
      optional: true
      description: |
        A .ssh directory with private key, known_hosts, config, etc. Copied to
        the user's home before git commands are executed.Used to authenticate
        with the git remote when performing the clone. Binding a Secret to this
        Workspace is strongly recommended over other volume types.
    - name: basic-auth
      optional: true
      description: |
        A Workspace containing a .gitconfig and .git-credentials file. These
        will be copied to the user's home before any git commands are run. Any
        other files in this Workspace are ignored. It is strongly recommended
        to use ssh-directory over basic-auth whenever possible and to bind a
        Secret to this Workspace over other volume types.
    - name: ssl-ca-directory
      optional: true
      description: |
        A Workspace containing CA certificates, this will be used by Git to
        verify the peer with when fetching or pushing over HTTPS.

  params:
    - name: URL
      type: string
      description: |
        Repository URL to clone from.
    - name: REVISION
      type: string
      default: ""
      description: |
        Revision to checkout, an branch, tag, sha, ref, etc...
    - name: REFSPEC
      default: ""
      description: |
        Repository `refspec` to fetch before checking out the revision.
    - name: SUBMODULES
      type: string
      default: "true"
      description: |
        Initialize and fetch git submodules.
    - name: DEPTH
      type: string
      default: "1"
      description: |
        Perform a shallow clone, fetching only the most recent N commits.
    - name: SSL_VERIFY
      type: string
      default: "true"
      description: |
        Set the `http.sslVerify` global git config. Setting this to `false` is
        not advised unless you are sure that you trust your git remote.
    - name: CRT_FILENAME
      type: string
      default: ca-bundle.crt
      description: |
        File name of mounted crt using ssl-ca-directory Workspace. Default value
        is "ca-bundle.crt".
    - name: SUBDIRECTORY
      type: string
      default: ""
      description: |
        Subdirectory relative to the `output` Workspace to clone the repository.
    - name: SPARSE_CHECKOUT_DIRECTORIES
      type: string
      default: ""
      description: |
        Define the directory patterns to match or exclude when performing a
        sparse checkout.
    - name: DELETE_EXISTING
      type: string
      default: "true"
      description: |
        Clean out the contents of the destination directory if it already exists
        before cloning.
    - name: HTTP_PROXY
      type: string
      default: ""
      description: |
        HTTP proxy server for non-SSL requests.
    - name: HTTPS_PROXY
      type: string
      default: ""
      description: |
        HTTPS proxy server for SSL requests.
    - name: NO_PROXY
      type: string
      default: ""
      description: |
        Opt out of proxying HTTP/HTTPS requests.
    - name: VERBOSE
      type: string
      default: "false"
      description: |
        Log the commands executed.
    - name: USER_HOME
      type: string
      default: "/home/git"
      description: |
        Absolute path to the user's home directory.

  results:
    - name: COMMIT
      description: |
        The precise commit SHA that was fetched by this Task.
    - name: URL
      description: |
        The precise URL that was fetched by this Task.
    - name: COMMITTER_DATE
      description: |
        The epoch timestamp of the commit that was fetched by this Task.

  volumes:
    - name: user-home
      emptyDir: {}
    - name: scripts-dir
      emptyDir: {}

  stepTemplate:
    env:
{{- include "environment-variables" . | nindent 6 }}
{{- if .Values.stepTemplate.resources }}
    resources:
  {{- .Values.stepTemplate.resources | toYaml | nindent 6 }}
{{- end }}
{{- if .Values.stepTemplate.securityContext }}
    securityContext:
  {{- .Values.stepTemplate.securityContext | toYaml | nindent 6 }}
{{- end }}

  steps:
    - name: load-scripts
      image: {{ .Values.images.gitInit }}
      workingDir: /scripts
      script: |
{{- range $path, $content := .Files.Glob  "scripts/*.sh" }}
  {{- $name := trimPrefix "scripts/" $path }}
        printf '%s' "{{ $content | toString | b64enc }}" |base64 -d >{{ $name }}
        chmod +x "{{ $name }}"
{{- end }}
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts

    - name: prepare
      image: {{ .Values.images.gitInit }}
      command:
        - /scripts/prepare.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts
        - name: user-home
          mountPath: $(params.USER_HOME)

    - name: git-clone
      image: {{ .Values.images.gitInit }}
      command:
        - /scripts/git-clone.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts
        - name: user-home
          mountPath: $(params.USER_HOME)

    - name: report
      image: {{ .Values.images.gitInit }}
      command:
        - /scripts/report.sh
      volumeMounts:
        - name: scripts-dir
          mountPath: /scripts
